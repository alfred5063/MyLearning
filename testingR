#### GBM Model Building
library(readr)
library(reshape)
library(caret)
library(dplyr)
library(ggplot2)
library(forecast)
library("gdata")

library("dismo")
library("gbm")

setwd("C:/Users/")

mod_dat<- read.csv("Output/HX_ALL.csv")

#HX_ALL$Date<- as.Date(HX_ALL$Date)
#mod_dat_Train<- HX_ALL[which(HX_ALL$Date< as.Date("2017-01-01")),]
#mod_dat_Train<-subset(mod_dat_Train,select=-c(X.1,HX_Name,Date))

#mod_dat_Test<- HX_ALL[which(HX_ALL$Date>= as.Date("2017-01-01")),]
#mod_dat_Test<-subset(mod_dat_Test,select=-c(X.1,HX_Name,Date))

#hex_list<- unique(HPH_all$HX_Name)
#HX_267<-HPH_all[which(HPH_all$HX_Name =='E267'),]
#sum(is.na(HX_267$OHTC))

#plot(HX_267$OHTC,type='l')
#HX_267[is.na(HX_267)] <- 0

#OHTC_ts = ts(HX_267[, c('OHTC')])
#HX_267$OHTC_ts = tsclean(OHTC_ts)

#CMF_ts = ts(HX_267[,c('crude_massflow_CS')])
#HX_267$CMF_ts = tsclean(CMF_ts)
#plot(HX_267$OHTC,type='l')


# TAKING NUMBERS OF DAYS
# for(i in c(15,30,60,90)) { 
#   for (j in 1:length(hex_list)){
mod_dat$Date<- as.Date(mod_dat$Date,"%m/%d/%Y")
hex_list<- unique(mod_dat$HX_Name)
for(i in c(c(76:79),c(81:84),c(86:89))) { 
  l<- keep(mod_dat,hex_list,i)
  rm(list = l)
  gc()
  for (j in 14){
    l=14
    
    #Code for Specific HX.
    #mod_dat<- read.csv(paste("Output/HPH_",hex_list[j],".csv",sep =""))
    #txt<- paste("mod_dat<- mod_dat[which(!is.na(mod_dat$OHTC_shift_",as.character(i),")),]",sep = "")
    #eval(parse(text = txt))
    
    mod_dat_Train<- mod_dat[which(mod_dat$Date< as.Date("2017-03-01")),]
    mod_dat_Train<- mod_dat_Train[which(!is.na(mod_dat_Train[,paste("OHTC_shift_",i,sep = "")])),]
    mod_dat_Test<- mod_dat[which(mod_dat$Date>= as.Date("2017-01-01") & mod_dat$HX_Name==hex_list[j]),]
    
    ind<- which(colnames(mod_dat_Test)==paste("OHTC_shift_",as.character(i),sep = ""))
    # ind<- which(colnames(mod_dat_Test)=="y")
    ind1<-  which(colnames(mod_dat_Test)=="Crude_Mass_flow_shift_0")
    ind2<-  which(colnames(mod_dat_Test)==paste("Crude_Mass_flow_shift_",as.character(i),sep = ""))
    # ind1<- which(c(1:30)==i)
    
    fit.well2 <- gbm.step(data=mod_dat_Train, gbm.x = c(4:ind1,ind2), gbm.y = ind, family = "laplace",tree.complexity = 4,
                         learning.rate=.1,n.trees = 900,step.size = 300, max.trees=900)
    save(fit.well2, file = paste("Models/HPH_",hex_list[j],"_",as.character(i),".rda",sep = ""))
    
    # load(paste("Models/HPH_",hex_list[j],"_",as.character(i),".rda",sep = ""))
    mod_dat_Test$pred_ohtc<-  predict(fit.well2,mod_dat_Test[c(4:ind1,ind2)],n.trees=fit.well2$n.trees)
    
    mod_dat_Test$actual_ohtc<- mod_dat_Test[,paste("OHTC_shift_",i,sep = "")]
    error<-mod_dat_Test$actual_ohtc-mod_dat_Test$pred_ohtc
    mod_dat_Test$RMSE<-sqrt(mean(error*error,na.rm=TRUE ))
    mod_dat_Test$MSE<-mean(error*error,na.rm=TRUE)
    mod_dat_Test$MAPE<-mean(abs((error)/mod_dat_Test$actual_ohtc) * 100,na.rm=TRUE)
    
    #mod_dat_Test$key<- paste(mod_dat_Test$HX_Name,mod_dat_Test$Date)
    #HPH_all$key<- paste(HPH_all$HX_Name,HPH_all$Date)
    #mod_dat_Test$actual_ohtc<- HPH_all$OHTC[match(mod_dat_Test$key,HPH_all$key)]
    
    
    png(filename=paste("Multimodel/Test_HPH_",hex_list[j],"_",as.character(i),".png",sep = ""))
    plot(mod_dat_Test$pred_ohtc,type="l",col="red")
    lines(mod_dat_Test$actual_ohtc,col="green")
    dev.off()
    
    assign(paste("HPH_",hex_list[j],"_",as.character(i),sep = ""),fit.well2)
    
    write.csv(mod_dat_Test,paste("Multimodel/Test_HPH_",hex_list[j],"_",as.character(i),".csv",sep = ""),row.names = FALSE)
    
  }
}
